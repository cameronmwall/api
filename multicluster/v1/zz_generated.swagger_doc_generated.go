package v1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ComponentCondition = map[string]string{
	"":                   "ComponentCondition contains condition information for tracked components",
	"name":               "The component name",
	"kind":               "The resource kind this condition represents",
	"type":               "Type is the type of the cluster condition.",
	"status":             "Status is the status of the condition. One of True, False, Unknown.",
	"lastTransitionTime": "LastTransitionTime is the last time the condition changed from one status to another.",
	"reason":             "Reason is a (brief) reason for the condition's last status change.",
	"message":            "Message is a human-readable message indicating details about the last status change.",
}

func (ComponentCondition) SwaggerDoc() map[string]string {
	return map_ComponentCondition
}

var map_ComponentConfig = map[string]string{
	"": "ComponentConfig provides optional configuration items for individual components",
}

func (ComponentConfig) SwaggerDoc() map[string]string {
	return map_ComponentConfig
}

var map_MultiClusterEngine = map[string]string{
	"": "MultiClusterEngine is the Schema for the multiclusterengines API\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
}

func (MultiClusterEngine) SwaggerDoc() map[string]string {
	return map_MultiClusterEngine
}

var map_MultiClusterEngineCondition = map[string]string{
	"type":               "Type is the type of the cluster condition.",
	"status":             "Status is the status of the condition. One of True, False, Unknown.",
	"lastUpdateTime":     "The last time this condition was updated.",
	"lastTransitionTime": "LastTransitionTime is the last time the condition changed from one status to another.",
	"reason":             "Reason is a (brief) reason for the condition's last status change.",
	"message":            "Message is a human-readable message indicating details about the last status change.",
}

func (MultiClusterEngineCondition) SwaggerDoc() map[string]string {
	return map_MultiClusterEngineCondition
}

var map_MultiClusterEngineList = map[string]string{
	"": "MultiClusterEngineList contains a list of MultiClusterEngine\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
}

func (MultiClusterEngineList) SwaggerDoc() map[string]string {
	return map_MultiClusterEngineList
}

var map_MultiClusterEngineSpec = map[string]string{
	"":                   "MultiClusterEngineSpec defines the desired state of MultiClusterEngine",
	"availabilityConfig": "Specifies deployment replication for improved availability. Options are: Basic and High (default)",
	"nodeSelector":       "Set the nodeselectors",
	"imagePullSecret":    "Override pull secret for accessing MultiClusterEngine operand and endpoint images",
	"overrides":          "Developer Overrides",
	"tolerations":        "Tolerations causes all components to tolerate any taints.",
	"targetNamespace":    "Location where MCE resources will be placed",
}

func (MultiClusterEngineSpec) SwaggerDoc() map[string]string {
	return map_MultiClusterEngineSpec
}

var map_MultiClusterEngineStatus = map[string]string{
	"":      "MultiClusterEngineStatus defines the observed state of MultiClusterEngine",
	"phase": "Latest observed overall state",
}

func (MultiClusterEngineStatus) SwaggerDoc() map[string]string {
	return map_MultiClusterEngineStatus
}

var map_Overrides = map[string]string{
	"":                              "Overrides provides developer overrides for MCE installation",
	"imagePullPolicy":               "Pull policy for the MCE images",
	"components":                    "Provides optional configuration for components",
	"infrastructureCustomNamespace": "Namespace to install Assisted Installer operator",
}

func (Overrides) SwaggerDoc() map[string]string {
	return map_Overrides
}

// AUTO-GENERATED FUNCTIONS END HERE
